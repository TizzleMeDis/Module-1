:root {
    /*Coloring*/
    --background-color: #f2f3ae;
    --secondary-color: #edd382;
    --accent-color: #fc9e4f;
    --accent2-color: #f4442e;
    --text-color: #020122;
    /*Sizing*/
    --bar-width: 60px;
    --bar-height: 8px;
    --drop-down-gap: 6px;
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
    /*Animation*/
    --animation-timing: 300ms ease-in-out;

}

*, *::after, *::before {
    margin: 0px;
    padding: 0px;
}

body {
    box-sizing: border-box;
    font-family:Arial, Helvetica, sans-serif;
    height: 3000px;
    position: relative;
    top: 0;
    color: var(--text-color);
    background-color: var(--background-color);
}

.nav-container { /* Keeps everything at the top of the page */
    position: sticky;
    top: 0;
    padding: clamp(5vh, 2rem, 5rem);
    background-color: var(--secondary-color);
    z-index: 1;
}

.home {
    background-color: var(--accent-color);
    color: var(--text-color);
    border-radius: 15%;
    box-shadow: 3px 3px 3px black;
    font-size: clamp(1rem,1.5vw,2.5rem);
    text-decoration: none;
    padding: 8px;
    margin: 0 1vw;

    transition: 500ms ease;
}
/*-----------------------------------------------------------------------------------------------*/
/*--------------------------------- For pc/laptop displays --------------------------------------*/
@media screen and (min-width:601px) {
    .hamburger-menu {
        display: none;
    }
    .sidebar {
        display: none;
    }
    .menu-bar {
        list-style-type: none;
        display: flex;
        flex-direction: row;
        padding: 8px;
    }

    .about, .services, .contact {
        background-color: var(--accent-color);
        color: var(--text-color);
        border-radius: 15%;
        box-shadow: 3px 3px 3px black;
        font-size: clamp(1rem,1.5vw,2.5rem);
        text-decoration: none;
        padding: 8px;
        margin: 0 1vw;
    
        transition: 500ms ease;
    }

    .logo {
        flex: 3
    }
}
/*-----------------------------------------------------------------------------------------------*/
/*---------------------------------- For small screens/ phone displays --------------------------*/
@media screen and (max-width: 600.99px) {
    .menu-bar {
        display: none;
    }

    .hamburger-menu {
        --x-width: calc(var(--hamburger-height) * 1.41421356237); /* height of hamburger lines * sqrt(2) | obtains hypotenuse */

        display: flex;
        flex-direction: row;
        justify-content:space-between;
        align-items: center;
        list-style-type: none;
    }

    .toggle {
        padding: .5rem 1rem;
    }

    .sidebar {
        background-color: var(--secondary-color);
        position: fixed;
        right: 3vw;
        max-width: fit-content;
        padding: 0 0;
        margin: 0 0;
        visibility: visible;

        text-align: center;
        z-index: 2;
        
    }

    .side-links { /* container for unordered list */
        list-style-type: none;
    }

    .side-link { /* links for side menu*/
        padding: 1rem 0;

        border: 2px solid black;
        border-radius: 5%;
    }

    .sidebar a {
        text-decoration: none;
    }
/* ===== here is a problem | NOT TRANSFORMING ===== */
    .sidebar a:hover {
        transform: scale(1.1) translateX(10px);
        transition: transform var(--animation-timing);
    }
/* ===== here is a problem | NOT TARGETING CORRECT TAG ===== */
    .hamburger-menu:has(.drop-down-box:checked) .sidebar { /* make sure to make side menu visible when users touch hamburger menu */
        visibility: hidden;
    }

    .drop-down-box { /* corrects the positioning of the hamburger bars */
        display: flex;
        flex-direction: column;
        gap: var(--drop-down-gap);

        z-index: 2;
        cursor: pointer;
    }

/* ===== here is a problem | NOT ANIMATING ::BEFORE AND ::AFTER ===== */
    .drop-down-box::before,
    .drop-down-box::after,
    .drop-down-box input { /* makes the hamburger turn into an 3 lines stacked*/
        content: "";
        width: var(--bar-width);
        height: var(--bar-height);
        background-color: var(--accent2-color);
        border-radius: 9999px;

        transition: opacity var(--animation-timing), width var(--animation-timing);
    }

    .drop-down-box input { /* removes checkbox and makes cursor a finger */
        appearance: none;
        padding: 0;
        margin: 0;
        outline: none;
        pointer-events: none;
    }

/* ===== here is a problem | NOT MOVING BAR IN CORRECT SPOT ===== */
    .drop-down-box:has(input:checked)::before { /* makes top bar angle into x*/
        transform: rotate(45deg) translate(0, calc(var(--bar-height)/2));
        transition: transform var(--animation-timing);
        
    }
/* ===== here is a problem | NOT MOVING BAR IN CORRECT SPOT ===== */
    .drop-down-box:has(input:checked)::after { /* makes bottom bar angle into x*/
        transform: rotate(-45deg) translate(0, calc(var(--bar-height)/2));
        transition: transform var(--animation-timing);
    }
    
    .hamburger-menu input:checked { /* makes middle bar dissappear when clicked */
        opacity: 0;
        width: 0;
      }
}
/*-----------------------------------------------------------------------------------------------*/
/*-------------------------------------- Loading animation --------------------------------------*/
.loading {
    height: 50px;
    width: 50px;
    border: 4px solid var(--accent2-color);
    border-radius: 4px;
    box-shadow: 0 0 8px var(--accent2-color), 0 0 8px var(--accent2-color) inset;
    position: relative;
    top: 40vh;
    left: 50%;

    animation: 2s loading ease-in-out infinite;
}

@keyframes loading {
    0% {
        transform: rotateX(0) rotateY(0) rotateZ(0);
    }
    33% {
        transform: rotateX(180deg) rotateY(0) rotateZ(0);
    }
    67%{
        transform: rotateX(180deg) rotateY(180deg) rotateZ(0);
    }
    100%{
        transform: rotateX(180deg) rotateY(180deg) rotateZ(180deg);
    }
}